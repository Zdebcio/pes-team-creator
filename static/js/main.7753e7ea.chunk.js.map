{"version":3,"sources":["components/Start.js","components/TemplateHiddenCard.js","components/CardsListToChoose.js","components/PlayerPreferPositions.js","components/TemplateUserCard.js","components/ActualUserCards.js","components/TemplateSelectedCard.js","components/SelectedCards.js","components/BoardWithPositions.js","components/FinalResults.js","components/NavigatonBar.js","components/Game.js","components/App.js","serviceWorker.js","index.js"],"names":["Start","props","react_default","a","createElement","className","id","onClick","changeNumberOf","users","numberOfPlayers","isNewGame","TemplateHiddenCard","Fragment","player","isActive","isCardActive","src","alt","CardsListToChoose","randomPlayers","length","map","components_TemplateHiddenCard","key","PlayerPreferPositions","isPlayable","position","concat","TemplateUserCard","face","club","country","hisPosition","name","ovr","components_PlayerPreferPositions","ActualUserCards","activeUser","index","cards","card","components_TemplateUserCard","TemplateSelectedCard","selectCard","isSelected","isOpen","class","SelectedCards","state","selectedPlayers","_this","areCardsOpened","isCardSelected","takeCard","newDraw","openCards","Object","toConsumableArray","this","filter","setState","_this2","components_TemplateSelectedCard","React","Component","BoardWithPositions","cardsPosition","FinalResults","numberOfActiveUser","handleChangeUserClick","type","NavigationBar","mobileMenuIsActive","mobileMenuStateClick","prevState","isDrawStarted","startNewDraw","Game","players","playersFilterAndRandom","isDataLoaded","indexOfActiveUser","roundsToEnd","rounds","waitForData","fetch","then","response","ok","Error","status","json","data","catch","err","console","log","i","push","handleFilterByPositionClick","playersFilter","cardSelected","Math","floor","random","splice","handleTakeCardToOpenClick","numberOfCards","activeNumber","forEach","handleOpenCardsClick","handleIsCardSelectedClick","handleTakeSelectedCardClick","playerChoose","selectedPlayer","handleStartNewDrawClick","setTimeout","NavigatonBar","components_CardsListToChoose","components_ActualUserCards","components_FinalResults","components_BoardWithPositions","components_SelectedCards","App","startPage","numberOfUsers","handleClickStartGame","page","handleChangeNumberOf","components_Start","components_Game","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7753e7ea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"../styles/Start.css\";\r\n\r\nconst Start = props => {\r\n  return (\r\n    <div className=\"start\">\r\n      <h1>PES team creator</h1>\r\n      <h2>Players:</h2>\r\n      <div className=\"users\">\r\n        <button id=\"-\" onClick={() => props.changeNumberOf(\"-\", \"users\")}>\r\n          <i className=\"far fa-minus-square\" />\r\n        </button>\r\n        <span>{props.users}</span>\r\n        <button id=\"+\" onClick={() => props.changeNumberOf(\"+\", \"users\")}>\r\n          <i className=\"far fa-plus-square\" />\r\n        </button>\r\n      </div>\r\n      <h2>Footballers:</h2>\r\n      <div className=\"players\">\r\n        <button id=\"-\" onClick={() => props.changeNumberOf(\"-\", \"players\")}>\r\n          <i className=\"far fa-minus-square\" />\r\n        </button>\r\n        <span>{props.numberOfPlayers}</span>\r\n        <button id=\"+\" onClick={() => props.changeNumberOf(\"+\", \"players\")}>\r\n          <i className=\"far fa-plus-square\" />\r\n        </button>\r\n      </div>\r\n      <button className=\"start_draw\" onClick={() => props.isNewGame(false)}>\r\n        Start draw\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import React from \"react\";\r\n\r\nimport \"../styles/TemplateHiddenCard.css\";\r\n\r\nconst TemplateHiddenCard = props => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={props.player.isActive ? \"card active\" : \"card\"}\r\n        onClick={() => props.isCardActive(props.player.id)}\r\n      >\r\n        <img src=\"images/cardTemplateHide.png\" alt=\"\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateHiddenCard;\r\n","import React from \"react\";\r\n\r\nimport TemplateHiddenCard from \"./TemplateHiddenCard\";\r\n\r\nimport \"../styles/CardsListToChoose.css\";\r\n\r\nconst CardsListToChoose = props => {\r\n  return (\r\n    <div className=\"cards_list\">\r\n      {props.randomPlayers.length > 0 &&\r\n        props.randomPlayers.map(player => (\r\n          <TemplateHiddenCard\r\n            key={player.id}\r\n            player={player}\r\n            isCardActive={props.isCardActive}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsListToChoose;\r\n","import React from \"react\";\r\n\r\nimport \"../styles/PlayerPreferPositions.css\";\r\n\r\nconst PlayerPreferPositions = props => {\r\n  const isPlayable = position => {\r\n    return props.position[position] ? `${position} playable` : `${position}`;\r\n  };\r\n  return (\r\n    <div className=\"positions_card\">\r\n      <div className={isPlayable(\"cf\")} />\r\n      <div className={isPlayable(\"ss\")} />\r\n      <div className={isPlayable(\"lwf\")} />\r\n      <div className={isPlayable(\"rwf\")} />\r\n      <div className={isPlayable(\"lmf\")} />\r\n      <div className={isPlayable(\"rmf\")} />\r\n      <div className={isPlayable(\"amf\")} />\r\n      <div className={isPlayable(\"cmf\")} />\r\n      <div className={isPlayable(\"dmf\")} />\r\n      <div className={isPlayable(\"lb\")} />\r\n      <div className={isPlayable(\"cb\")} />\r\n      <div className={isPlayable(\"rb\")} />\r\n      <div className={isPlayable(\"gk\")} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerPreferPositions;\r\n","import React from \"react\";\r\nimport PlayerPreferPositions from \"./PlayerPreferPositions\";\r\n\r\nimport \"../styles/TemplateSelectedCard.css\";\r\nimport \"../styles/TemplateUserCard.css\";\r\n\r\nconst TemplateUserCard = props => {\r\n  return (\r\n    <div className=\"actual_card\">\r\n      <img className=\"card_background\" src=\"images/cardTemplate.png\" alt=\"\" />\r\n      <img\r\n        className=\"face\"\r\n        src={props.player.face ? props.player.face : \"images/faces/no-face.png\"}\r\n        alt=\"\"\r\n      />\r\n      <img className=\"club\" src={props.player.club} alt=\"\" />\r\n      <img className=\"country\" src={props.player.country} alt=\"\" />\r\n      <span className=\"hisPosition\">{props.player.hisPosition}</span>\r\n      <h3>{props.player.name}</h3>\r\n      <span className=\"ovr\">{props.player.ovr}</span>\r\n      <PlayerPreferPositions position={props.player.position} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemplateUserCard;\r\n","import React from \"react\";\r\n\r\nimport TemplateUserCard from \"./TemplateUserCard\";\r\nimport \"../styles/ActualUserCards.css\";\r\n\r\nconst ActualUserCards = props => {\r\n  return (\r\n    <div className=\"cards_list\">\r\n      {props.activeUser[props.index].cards.map(card => (\r\n        <TemplateUserCard key={card.id} player={card} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActualUserCards;\r\n","import React from \"react\";\r\nimport PlayerPreferPositions from \"./PlayerPreferPositions\";\r\n\r\nimport \"../styles/TemplateSelectedCard.css\";\r\n\r\nconst TemplateSelectedCard = props => {\r\n  return (\r\n    <div\r\n      onClick={() => props.selectCard(props.player.id)}\r\n      className={\r\n        props.player.isSelected ? \"actual_card active_card\" : \"actual_card\"\r\n      }\r\n    >\r\n      {props.isOpen ? (\r\n        <>\r\n          <img\r\n            className=\"card_background\"\r\n            src=\"images/cardTemplate.png\"\r\n            alt=\"\"\r\n          />\r\n          {props.player.isSelected && (\r\n            <div className=\"active_symbol\">\r\n              <i class=\"fab fa-get-pocket\" />\r\n            </div>\r\n          )}\r\n          <img\r\n            className=\"face\"\r\n            src={\r\n              props.player.face ? props.player.face : \"images/faces/no-face.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n\r\n          <img className=\"club\" src={props.player.club} alt=\"\" />\r\n          <img className=\"country\" src={props.player.country} alt=\"\" />\r\n          <span className=\"hisPosition\">{props.player.hisPosition}</span>\r\n          <h3>{props.player.name}</h3>\r\n          <span className=\"ovr\">{props.player.ovr}</span>\r\n          <PlayerPreferPositions position={props.player.position} />\r\n        </>\r\n      ) : (\r\n        <img\r\n          className=\"card_background\"\r\n          src=\"images/cardTemplateHide.png\"\r\n          alt=\"\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemplateSelectedCard;\r\n","import React from \"react\";\r\n\r\nimport TemplateSelectedCard from \"./TemplateSelectedCard\";\r\nimport \"../styles/SelectedCards.css\";\r\n\r\nclass SelectedCards extends React.Component {\r\n  state = {\r\n    selectedPlayers: this.props.selectedPlayers\r\n  };\r\n\r\n  cards = () => {\r\n    if (!this.props.areCardsOpened) {\r\n      return (\r\n        <button className=\"next_step active\" onClick={this.props.openCards}>\r\n          Zaakceptuj\r\n        </button>\r\n      );\r\n    } else if (this.props.areCardsOpened && !this.props.isCardSelected) {\r\n      return (\r\n        <button className=\"next_step active\" onClick={this.props.takeCard}>\r\n          Wybierz kartę\r\n        </button>\r\n      );\r\n    } else if (this.props.areCardsOpened && this.props.isCardSelected) {\r\n      return (\r\n        <button className=\"next_step active\" onClick={this.props.newDraw}>\r\n          Nowe losowanie\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    let selectedPlayers = [...this.props.selectedPlayers];\r\n    if (this.props.isCardSelected) {\r\n      selectedPlayers = selectedPlayers.filter(player => player.isSelected);\r\n    }\r\n\r\n    if (selectedPlayers.length !== this.state.selectedPlayers.length) {\r\n      this.setState({\r\n        selectedPlayers\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"actual_cards\">\r\n        <h2>Aktualnie wybrane karty:</h2>\r\n        <div className=\"cards\">\r\n          {this.state.selectedPlayers.map(player => (\r\n            <TemplateSelectedCard\r\n              key={player.id}\r\n              player={player}\r\n              isOpen={this.props.areCardsOpened}\r\n              selectCard={this.props.selectCard}\r\n            />\r\n          ))}\r\n        </div>\r\n        {this.cards()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectedCards;\r\n","import React from \"react\";\r\n\r\nimport \"../styles/BoardWithPositions.css\";\r\n\r\nconst BoardWithPositions = props => {\r\n  return (\r\n    <div className=\"positions_list\">\r\n      <h1>Wybierz pozycję:</h1>\r\n      <div className=\"positions\">\r\n        <div className=\"cf\" onClick={() => props.cardsPosition(\"cf\")}>\r\n          <span>cf</span>\r\n        </div>\r\n        <div className=\"ss\" onClick={() => props.cardsPosition(\"ss\")}>\r\n          <span>ss</span>\r\n        </div>\r\n        <div className=\"lwf\" onClick={() => props.cardsPosition(\"lwf\")}>\r\n          <span>lwf</span>\r\n        </div>\r\n        <div className=\"rwf\" onClick={() => props.cardsPosition(\"rwf\")}>\r\n          <span>rwf</span>\r\n        </div>\r\n        <div className=\"lmf\" onClick={() => props.cardsPosition(\"lmf\")}>\r\n          <span>lmf</span>\r\n        </div>\r\n        <div className=\"rmf\" onClick={() => props.cardsPosition(\"rmf\")}>\r\n          <span>rmf</span>\r\n        </div>\r\n        <div className=\"amf\" onClick={() => props.cardsPosition(\"amf\")}>\r\n          <span>amf</span>\r\n        </div>\r\n        <div className=\"cmf\" onClick={() => props.cardsPosition(\"cmf\")}>\r\n          <span>cmf</span>\r\n        </div>\r\n        <div className=\"dmf\" onClick={() => props.cardsPosition(\"dmf\")}>\r\n          <span>dmf</span>\r\n        </div>\r\n        <div className=\"lb\" onClick={() => props.cardsPosition(\"lb\")}>\r\n          <span>lb</span>\r\n        </div>\r\n        <div className=\"cb\" onClick={() => props.cardsPosition(\"cb\")}>\r\n          <span>cb</span>\r\n        </div>\r\n        <div className=\"rb\" onClick={() => props.cardsPosition(\"rb\")}>\r\n          <span>rb</span>\r\n        </div>\r\n        <div className=\"gk\" onClick={() => props.cardsPosition(\"gk\")}>\r\n          <span>gk</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardWithPositions;\r\n","import React from \"react\";\r\n\r\nimport TemplateUserCard from \"./TemplateUserCard\";\r\nimport \"../styles/ActualUserCards.css\";\r\nimport \"../styles/FinalResults.css\";\r\n\r\nclass FinalResults extends React.Component {\r\n  state = {\r\n    numberOfActiveUser: 1\r\n  };\r\n\r\n  handleChangeUserClick = type => {\r\n    let numberOfActiveUser = this.state.numberOfActiveUser;\r\n    if (type === \"-\") {\r\n      if (numberOfActiveUser > 1) {\r\n        numberOfActiveUser--;\r\n      } else if (numberOfActiveUser === 1) {\r\n        numberOfActiveUser = this.props.users.length;\r\n      }\r\n    } else if (type === \"+\") {\r\n      if (numberOfActiveUser < this.props.users.length) {\r\n        numberOfActiveUser++;\r\n      } else if (numberOfActiveUser === this.props.users.length) {\r\n        numberOfActiveUser = 1;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      numberOfActiveUser\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"results\">\r\n        <h1>Koniec losowania, oto wyniki:</h1>\r\n        <div className=\"user_name\">\r\n          <button onClick={() => this.handleChangeUserClick(\"-\")}>\r\n            <i className=\"fas fa-arrow-circle-left\" />\r\n          </button>\r\n          <h2>{`Gracz ${this.state.numberOfActiveUser}`}</h2>\r\n          <button onClick={() => this.handleChangeUserClick(\"+\")}>\r\n            <i className=\"fas fa-arrow-circle-right\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"user_cards\">\r\n          {this.props.users[this.state.numberOfActiveUser - 1].cards.map(\r\n            player => (\r\n              <TemplateUserCard key={player.id} player={player} />\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FinalResults;\r\n","import React from \"react\";\r\n\r\nimport \"../styles/NavigationBar.css\";\r\n\r\nclass NavigationBar extends React.Component {\r\n  state = {\r\n    mobileMenuIsActive: false\r\n  };\r\n\r\n  mobileMenuStateClick = () => {\r\n    this.setState(prevState => ({\r\n      mobileMenuIsActive: !prevState.mobileMenuIsActive\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"menu\">\r\n        <ul className=\"navigation\">\r\n          <li className=\"btn_nav\" onClick={() => this.props.isNewGame(true)}>\r\n            Nowa gra\r\n          </li>\r\n          <li className=\"btn_nav inactive\">Zasady</li>\r\n          {this.props.isDrawStarted && !this.props.areCardsOpened ? (\r\n            <li className=\"btn_nav\" onClick={this.props.startNewDraw}>\r\n              Wróć\r\n            </li>\r\n          ) : (\r\n            <li className=\"btn_nav inactive\">Wróć</li>\r\n          )}\r\n        </ul>\r\n\r\n        <span className=\"actual_user_name\">{`Gracz ${this.props.activeUser +\r\n          1}`}</span>\r\n\r\n        {this.props.isDrawStarted && !this.props.areCardsOpened ? (\r\n          <div className=\"undo_btn\" onClick={this.props.startNewDraw}>\r\n            <i className=\"fas fa-undo-alt\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"undo_btn inactive\">\r\n            <i className=\"fas fa-undo-alt\" />\r\n          </div>\r\n        )}\r\n        <div className=\"mobile_menu_btn\" onClick={this.mobileMenuStateClick}>\r\n          {this.state.mobileMenuIsActive ? (\r\n            <i className=\"fas fa-times\" />\r\n          ) : (\r\n            <i className=\"fas fa-bars\" />\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.mobileMenuIsActive ? \"menu_mobile active\" : \"menu_mobile\"\r\n          }\r\n        >\r\n          <ul className=\"navigation_mobile\">\r\n            <li\r\n              className=\"btn_nav_mobile\"\r\n              onClick={() => this.props.isNewGame(true)}\r\n            >\r\n              Nowa gra\r\n            </li>\r\n            <li className=\"btn_nav_mobile\">Zasady</li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationBar;\r\n\r\n// const NavigationBar = props => {\r\n//   const mobileMenu = () => {\r\n\r\n//   };\r\n//   return (\r\n//     <nav className=\"menu\">\r\n//       <ul className=\"navigation\">\r\n//         <li className=\"btn_nav\" onClick={() => props.isNewGame(true)}>\r\n//           Nowa gra\r\n//         </li>\r\n//         <li className=\"btn_nav\">Zasady</li>\r\n//         {props.isDrawStarted && !props.areCardsOpened ? (\r\n//           <li className=\"btn_nav\" onClick={props.startNewDraw}>\r\n//             Wróć\r\n//           </li>\r\n//         ) : (\r\n//           <li className=\"btn_nav inactive\">Wróć</li>\r\n//         )}\r\n//       </ul>\r\n//       <span className=\"actual_user_name\">{`Gracz ${props.activeUser +\r\n//         1}`}</span>\r\n//       <div className=\"mobile_menu_btn\" onClick={mobileMenu}>\r\n//         MENU\r\n//       </div>\r\n//       <div className=\"menu_mobile\">\r\n//         <ul className=\"navigation_mobile\">\r\n//           <li className=\"btn_nav_mobile\" onClick={() => props.isNewGame(true)}>\r\n//             Nowa gra\r\n//           </li>\r\n//           <li className=\"btn_nav_mobile\">Zasady</li>\r\n//           {props.isDrawStarted && !props.areCardsOpened ? (\r\n//             <li className=\"btn_nav_mobile\" onClick={props.startNewDraw}>\r\n//               Wróć\r\n//             </li>\r\n//           ) : (\r\n//             <li className=\"btn_nav_mobile inactive\">Wróć</li>\r\n//           )}\r\n//         </ul>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default NavigationBar;\r\n","import React from \"react\";\r\n\r\nimport CardsListToChoose from \"./CardsListToChoose\";\r\nimport ActualUserCards from \"./ActualUserCards\";\r\nimport SelectedCards from \"./SelectedCards\";\r\nimport BoardWithPositions from \"./BoardWithPositions\";\r\nimport FinalResults from \"./FinalResults\";\r\nimport NavigationBar from \"./NavigatonBar\";\r\n\r\nimport \"../styles/Game.css\";\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n    users: [\r\n      // {\r\n      //   name: \"ggg1\",\r\n      //   cards: [\r\n      //     {\r\n      //       id: 10,\r\n      //       name: \"G. Higuaín\",\r\n      //       ovr: 88,\r\n      //       face: \"images/faces/gonzalo-higuain.png\",\r\n      //       country: \"images/countries/argentina.png\",\r\n      //       club: \"images/clubs/chelsea.png\",\r\n      //       hisPosition: \"cf\",\r\n      //       position: {\r\n      //         gk: false,\r\n      //         lb: false,\r\n      //         rb: false,\r\n      //         cb: false,\r\n      //         dmf: false,\r\n      //         cmf: false,\r\n      //         amf: false,\r\n      //         lmf: false,\r\n      //         rmf: true,\r\n      //         lwf: false,\r\n      //         rwf: false,\r\n      //         ss: true,\r\n      //         cf: true\r\n      //       },\r\n      //       cardSelected: false,\r\n      //       isActive: false,\r\n      //       isSelected: false\r\n      //     },\r\n      //     {\r\n      //       id: 11,\r\n      //       name: \"L. Modrić\",\r\n      //       ovr: 91,\r\n      //       face: \"images/faces/luka-modric.png\",\r\n      //       country: \"images/countries/croatia.png\",\r\n      //       club: \"images/clubs/real-madrid.png\",\r\n      //       hisPosition: \"cmf\",\r\n      //       position: {\r\n      //         gk: false,\r\n      //         lb: false,\r\n      //         rb: false,\r\n      //         cb: false,\r\n      //         dmf: false,\r\n      //         cmf: true,\r\n      //         amf: true,\r\n      //         lmf: true,\r\n      //         rmf: true,\r\n      //         lwf: false,\r\n      //         rwf: false,\r\n      //         ss: false,\r\n      //         cf: false\r\n      //       },\r\n      //       cardSelected: false,\r\n      //       isActive: false,\r\n      //       isSelected: false\r\n      //     }\r\n      //   ]\r\n      // },\r\n      // {\r\n      //   name: \"ggg2\",\r\n      //   cards: [\r\n      //     {\r\n      //       id: 12,\r\n      //       name: \"D. de Gea\",\r\n      //       ovr: 91,\r\n      //       face: \"images/faces/david-de-gea.png\",\r\n      //       country: \"images/countries/spain.png\",\r\n      //       club: \"images/clubs/manchester-united.png\",\r\n      //       hisPosition: \"gk\",\r\n      //       position: {\r\n      //         gk: true,\r\n      //         lb: false,\r\n      //         rb: false,\r\n      //         cb: false,\r\n      //         dmf: false,\r\n      //         cmf: false,\r\n      //         amf: false,\r\n      //         lmf: false,\r\n      //         rmf: false,\r\n      //         lwf: false,\r\n      //         rwf: false,\r\n      //         ss: false,\r\n      //         cf: false\r\n      //       },\r\n      //       cardSelected: false,\r\n      //       isActive: false,\r\n      //       isSelected: false\r\n      //     },\r\n      //     {\r\n      //       id: 13,\r\n      //       name: \"L. Suarez\",\r\n      //       ovr: 90,\r\n      //       face: \"images/faces/luis-suarez.png\",\r\n      //       country: \"images/countries/uruguay.png\",\r\n      //       club: \"images/clubs/barcelona.png\",\r\n      //       hisPosition: \"cf\",\r\n      //       position: {\r\n      //         gk: false,\r\n      //         lb: false,\r\n      //         rb: false,\r\n      //         cb: false,\r\n      //         dmf: false,\r\n      //         cmf: false,\r\n      //         amf: false,\r\n      //         lmf: false,\r\n      //         rmf: false,\r\n      //         lwf: true,\r\n      //         rwf: true,\r\n      //         ss: true,\r\n      //         cf: true\r\n      //       },\r\n      //       cardSelected: false,\r\n      //       isActive: false,\r\n      //       isSelected: false\r\n      //     }\r\n      //   ]\r\n      // },\r\n      // {\r\n      //   name: \"ggg3\",\r\n      //   cards: [\r\n      //     {\r\n      //       id: 14,\r\n      //       name: \"R. Nainggolan\",\r\n      //       ovr: 85,\r\n      //       face: \"images/faces/radja-nainggolan.png\",\r\n      //       country: \"images/countries/belgium.png\",\r\n      //       club: \"images/clubs/internazionale.png\",\r\n      //       hisPosition: \"cmf\",\r\n      //       position: {\r\n      //         gk: false,\r\n      //         lb: false,\r\n      //         rb: false,\r\n      //         cb: false,\r\n      //         dmf: true,\r\n      //         cmf: true,\r\n      //         amf: true,\r\n      //         lmf: false,\r\n      //         rmf: false,\r\n      //         lwf: false,\r\n      //         rwf: false,\r\n      //         ss: false,\r\n      //         cf: false\r\n      //       },\r\n      //       cardSelected: false,\r\n      //       isActive: false,\r\n      //       isSelected: false\r\n      //     },\r\n      //     {\r\n      //       id: 15,\r\n      //       name: \"R. Lewandowski\",\r\n      //       ovr: 90,\r\n      //       face: \"images/faces/robert-lewandowski.png\",\r\n      //       country: \"images/countries/poland.png\",\r\n      //       club: \"images/clubs/bayern-munchen.png\",\r\n      //       hisPosition: \"cf\",\r\n      //       position: {\r\n      //         gk: false,\r\n      //         lb: false,\r\n      //         rb: false,\r\n      //         cb: false,\r\n      //         dmf: false,\r\n      //         cmf: false,\r\n      //         amf: true,\r\n      //         lmf: false,\r\n      //         rmf: false,\r\n      //         lwf: false,\r\n      //         rwf: false,\r\n      //         ss: true,\r\n      //         cf: true\r\n      //       },\r\n      //       cardSelected: false,\r\n      //       isActive: false,\r\n      //       isSelected: false\r\n      //     }\r\n      //   ]\r\n      // }\r\n    ],\r\n    players: [],\r\n    playersFilterAndRandom: [],\r\n    selectedPlayers: [],\r\n    isDataLoaded: false,\r\n    indexOfActiveUser: 0,\r\n    roundsToEnd: this.props.rounds,\r\n    isDrawStarted: false,\r\n    areCardsOpened: false,\r\n    isCardSelected: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(this.waitForData, 1000);\r\n  }\r\n\r\n  waitForData = () => {\r\n    fetch(\"data/players.json\")\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(response.status);\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          players: data,\r\n          isDataLoaded: true\r\n        });\r\n      })\r\n      .catch(err => console.log(err + \". Błąd podczas pobierania danych\"));\r\n\r\n    const users = [];\r\n\r\n    for (let i = 0; i < this.props.users; i++) {\r\n      users.push({\r\n        name: `Player ${i + 1}`,\r\n        cards: []\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      users\r\n    });\r\n  };\r\n\r\n  handleFilterByPositionClick = position => {\r\n    if (!this.state.isDrawStarted) {\r\n      const playersFilterAndRandom = [];\r\n      const playersFilter = this.state.players.filter(\r\n        player => player.position[position] && !player.cardSelected\r\n      );\r\n      while (playersFilter.length > 0) {\r\n        const index = Math.floor(Math.random() * playersFilter.length);\r\n        playersFilterAndRandom.push(playersFilter[index]);\r\n        playersFilter.splice(index, 1);\r\n      }\r\n      this.setState({\r\n        playersFilterAndRandom,\r\n        isDrawStarted: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleTakeCardToOpenClick = id => {\r\n    const playersFilterAndRandom = [...this.state.playersFilterAndRandom];\r\n    let numberOfCards = 0;\r\n    if (this.state.playersFilterAndRandom.length >= 5) {\r\n      numberOfCards = 5;\r\n    } else if (this.state.playersFilterAndRandom.length < 5) {\r\n      numberOfCards = playersFilterAndRandom.length;\r\n    }\r\n\r\n    const activeNumber = playersFilterAndRandom.filter(\r\n      player => player.isActive\r\n    ).length;\r\n    playersFilterAndRandom.forEach(player => {\r\n      if (\r\n        player.id === id &&\r\n        !player.isActive &&\r\n        activeNumber < numberOfCards\r\n      ) {\r\n        player.isActive = true;\r\n      } else if (player.id === id && player.isActive) {\r\n        player.isActive = false;\r\n      }\r\n    });\r\n    const selectedPlayers = playersFilterAndRandom.filter(\r\n      player => player.isActive\r\n    );\r\n\r\n    this.setState({\r\n      playersFilterAndRandom,\r\n      selectedPlayers\r\n    });\r\n  };\r\n\r\n  handleOpenCardsClick = () => {\r\n    const playersFilterAndRandom = [];\r\n    let numberOfCards = 0;\r\n    if (this.state.playersFilterAndRandom.length >= 5) {\r\n      numberOfCards = 5;\r\n    } else if (this.state.playersFilterAndRandom.length < 5) {\r\n      numberOfCards = this.state.playersFilterAndRandom.length;\r\n    }\r\n    if (this.state.selectedPlayers.length === numberOfCards) {\r\n      this.setState({\r\n        areCardsOpened: true,\r\n        playersFilterAndRandom\r\n      });\r\n    }\r\n  };\r\n\r\n  handleIsCardSelectedClick = id => {\r\n    const selectedPlayers = [...this.state.selectedPlayers];\r\n    if (this.state.areCardsOpened) {\r\n      selectedPlayers.forEach(player => {\r\n        if (player.id !== id) {\r\n          player.isSelected = false;\r\n        } else if (player.id === id) {\r\n          player.isSelected = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      selectedPlayers\r\n    });\r\n  };\r\n\r\n  handleTakeSelectedCardClick = () => {\r\n    const selectedPlayers = [...this.state.selectedPlayers];\r\n    const players = [...this.state.players];\r\n    const users = this.state.users;\r\n\r\n    let index = 0;\r\n    const playerChoose = selectedPlayers.filter(player => player.isSelected);\r\n    if (playerChoose.length === 1) {\r\n      players.forEach((player, id) => {\r\n        if (player.id === playerChoose[0].id) {\r\n          index = id;\r\n        }\r\n      });\r\n\r\n      const selectedPlayer = this.state.players.splice(index, 1);\r\n\r\n      users[this.state.indexOfActiveUser].cards.push(selectedPlayer[0]);\r\n\r\n      this.setState({\r\n        users,\r\n        isCardSelected: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleStartNewDrawClick = () => {\r\n    const playersFilterAndRandom = [];\r\n    const selectedPlayers = [];\r\n    const players = [...this.state.players];\r\n    players.forEach(player => {\r\n      player.cardSelected = false;\r\n      player.isActive = false;\r\n      player.isSelected = false;\r\n    });\r\n\r\n    let indexOfActiveUser = this.state.indexOfActiveUser;\r\n    let roundsToEnd = this.state.roundsToEnd;\r\n    if (this.state.isCardSelected) {\r\n      if (indexOfActiveUser === this.state.users.length - 1) {\r\n        if (this.state.roundsToEnd > 0) {\r\n          roundsToEnd--;\r\n        }\r\n        indexOfActiveUser = 0;\r\n      } else {\r\n        indexOfActiveUser++;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      players,\r\n      indexOfActiveUser,\r\n      roundsToEnd,\r\n      playersFilterAndRandom,\r\n      selectedPlayers,\r\n      areCardsOpened: false,\r\n      isCardSelected: false,\r\n      isDrawStarted: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const page = () => {\r\n      if (this.state.isDataLoaded) {\r\n        if (!this.state.isDrawStarted && this.state.roundsToEnd !== 0) {\r\n          return (\r\n            <BoardWithPositions\r\n              cardsPosition={this.handleFilterByPositionClick}\r\n            />\r\n          );\r\n        } else if (!this.state.isDrawStarted && this.state.roundsToEnd === 0) {\r\n          return <FinalResults users={this.state.users} />;\r\n        } else if (this.state.isDrawStarted && !this.state.areCardsOpened) {\r\n          return (\r\n            <CardsListToChoose\r\n              randomPlayers={this.state.playersFilterAndRandom}\r\n              isCardActive={this.handleTakeCardToOpenClick}\r\n            />\r\n          );\r\n        } else if (this.state.isDrawStarted && this.state.areCardsOpened) {\r\n          return (\r\n            <ActualUserCards\r\n              activeUser={this.state.users}\r\n              index={this.state.indexOfActiveUser}\r\n            />\r\n          );\r\n        }\r\n      } else {\r\n        return <h3 className=\"loading_data\">Wczytuję dane...</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <>\r\n        <NavigationBar\r\n          isNewGame={this.props.isNewGame}\r\n          isDrawStarted={this.state.isDrawStarted}\r\n          areCardsOpened={this.state.areCardsOpened}\r\n          startNewDraw={this.handleStartNewDrawClick}\r\n          activeUser={this.state.indexOfActiveUser}\r\n        />\r\n        <section className=\"container\">{page()}</section>\r\n        {/* <section className=\"container\">\r\n          <FinalResults users={this.state.users} />\r\n        </section> */}\r\n        {this.state.selectedPlayers.length > 0 && (\r\n          <SelectedCards\r\n            selectedPlayers={this.state.selectedPlayers}\r\n            openCards={this.handleOpenCardsClick}\r\n            areCardsOpened={this.state.areCardsOpened}\r\n            selectCard={this.handleIsCardSelectedClick}\r\n            takeCard={this.handleTakeSelectedCardClick}\r\n            isCardSelected={this.state.isCardSelected}\r\n            newDraw={this.handleStartNewDrawClick}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\n\nimport Start from \"./Start\";\nimport Game from \"./Game\";\n\nimport \"../styles/App.css\";\n\nclass App extends Component {\n  state = {\n    startPage: true,\n    numberOfUsers: 1,\n    numberOfPlayers: 25\n  };\n\n  handleClickStartGame = page => {\n    if (this.state.startPage) {\n      this.setState({\n        startPage: page\n      });\n    } else if (!this.state.startPage) {\n      this.setState({\n        startPage: page,\n        numberOfUsers: 1,\n        numberOfPlayers: 25\n      });\n    }\n  };\n\n  handleChangeNumberOf = (type, name) => {\n    if (name === \"users\") {\n      if (type === \"-\" && this.state.numberOfUsers > 1) {\n        this.setState(prevState => ({\n          numberOfUsers: prevState.numberOfUsers - 1\n        }));\n      } else if (type === \"+\" && this.state.numberOfUsers < 10) {\n        this.setState(prevState => ({\n          numberOfUsers: prevState.numberOfUsers + 1\n        }));\n      }\n    } else if (name === \"players\") {\n      if (type === \"-\" && this.state.numberOfPlayers > 2) {\n        this.setState(prevState => ({\n          numberOfPlayers: prevState.numberOfPlayers - 1\n        }));\n      } else if (type === \"+\" && this.state.numberOfPlayers < 32) {\n        this.setState(prevState => ({\n          numberOfPlayers: prevState.numberOfPlayers + 1\n        }));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.startPage ? (\n          <Start\n            isNewGame={this.handleClickStartGame}\n            users={this.state.numberOfUsers}\n            numberOfPlayers={this.state.numberOfPlayers}\n            changeNumberOf={this.handleChangeNumberOf}\n          />\n        ) : (\n          <Game\n            isNewGame={this.handleClickStartGame}\n            users={this.state.numberOfUsers}\n            rounds={this.state.numberOfPlayers}\n          />\n        )}\n        {/* <Game\n          isNewGame={this.handleClickStartGame}\n          users={this.state.numberOfUsers}\n          rounds={this.state.numberOfPlayers}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}